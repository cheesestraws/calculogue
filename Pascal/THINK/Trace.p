unit Trace;interface{ A global variable to see whether to trace stuff }	var		tracebool: boolean;	procedure initTrace;	procedure trace (s: string);	procedure traceOn;	procedure traceOff;	procedure mtraceStart;	procedure mtraceEnd;	procedure mtrace (s: string);	procedure dbg (s: string);implementation	var		logopen: boolean;		logfile: text;	procedure initTrace;	begin		traceOff;		logopen := false;	end;	procedure traceOn;	begin		tracebool := true;		if not logopen then			begin				open(logfile, 'trace log');				logopen := true;			end;	end;	procedure traceOff;	begin		tracebool := false;	end;	procedure trace (s: string);	begin		write('[trace] ');		writeln(s);		if logopen then			writeln(logfile, s);	end;	procedure dbg (s: string);	begin		if tracebool then			trace(s);	end;	procedure mtraceStart;	begin		write('[trace] ');	end;	procedure mtraceEnd;	begin		writeln;		if logopen then			writeln(logfile);	end;	procedure mtrace (s: string);	begin		write(s);		write(' ');		if logopen then			write(logfile, s, ' ');	end;end.